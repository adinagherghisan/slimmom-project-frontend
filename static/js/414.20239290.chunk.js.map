{"version":3,"file":"static/js/414.20239290.chunk.js","mappings":"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","sources":["pages/DiaryPage/DiaryPage.module.css","components/DiaryAddProductForm​/DiaryAddProductForm​.module.css","redux/searchProducts/selector.jsx","components/DiaryAddProductForm​/DiaryAddProductForm​.jsx","components/DiaryProductsList/DiaryProductsList.module.css","components/DiaryProductsListItem/DiaryProductsListItem.module.css","components/DiaryProductsListItem/DiaryProductsListItem.jsx","components/DiaryProductsList/DiaryProductsList.jsx","redux/diary/selectors.jsx","components/DiaryDateСalendar/DiaryDateСalendar.module.css","components/DiaryDateСalendar/DiaryDateСalendar.jsx","pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","export const selectorSearchProducts = (state) => state.search.products;\nexport const selectIsLoading = (state) => state.search.isLoading;\nexport const selectSearchError = (state) => state.search.error;","import React, { useState, useEffect } from \"react\";\nimport css from './DiaryAddProductForm​.module.css'; \nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAllProducts, fetchDiaryConsumed } from \"../../redux/diary/operations\";\nimport { fetchSearchProducts } from \"../../redux/searchProducts/operations\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport add_btn from '../../svg/add_btn.png';\nimport { selectorSearchProducts } from \"../../redux/searchProducts/selector\";\n\nfunction useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nconst DiaryAddProductForm = () => {\n    const dispatch = useDispatch();\n    const products = useSelector(selectorSearchProducts);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProduct, setSelectedProduct] = useState(null);\n\n    const debouncedSearchQuery = useDebounce(searchQuery, 500);\n\n    useEffect(() => {\n        if (debouncedSearchQuery) {\n            dispatch(fetchSearchProducts({ query: debouncedSearchQuery }));\n        }\n    }, [debouncedSearchQuery, dispatch]);\n\n    // const handleAddProduct = (values, { resetForm }) => {\n    //     if (selectedProduct && values.productWeight) {\n    //         dispatch(fetchDiaryConsumed({ productId: selectedProduct._id, product_weight: values.productWeight }));\n    //         resetForm();\n    //         setSelectedProduct(null);\n    //         setSearchQuery(\"\");\n    //     }\n    // };\n\n    const handleAddProduct = async (values, { resetForm }) => {\n    if (selectedProduct && values.productWeight) {\n        // Adăugarea produsului\n        await dispatch(fetchDiaryConsumed({ productId: selectedProduct._id, product_weight: values.productWeight }));\n        \n        // Reîmprospătarea listei de produse consumate\n        const dateString = new Date().toISOString().split('T')[0]; \n        dispatch(fetchAllProducts({ date: dateString }));\n        \n        resetForm(); \n        setSelectedProduct(null); \n        setSearchQuery(\"\"); \n    }\n};\n\n    const handleSelectProduct = (product) => {\n        setSelectedProduct(product);\n        setSearchQuery(product.title);\n    }; \n\n    return (\n        <div>\n            {/* Formular pentru căutarea produsului */}\n            <Formik\n                initialValues={{ productQuery: searchQuery, productWeight: \"\" }}\n                validationSchema={Yup.object({\n                    productQuery: Yup.string().required('Enter a product name'),\n                    productWeight: Yup.number()\n                        .typeError('Weight must be a number')\n                        .positive('Weight must be greater than zero')\n                        .required('Product weight is required'),\n                })}\n                onSubmit={handleAddProduct}\n            >\n                {({ isSubmitting, setFieldValue }) => (\n                    <Form>\n                        <div className={css.FieldGroup}>\n                            <Field\n                                type=\"text\"\n                                name=\"productQuery\"\n                                placeholder=\"Enter product name\"\n                                className={css.inputField}\n                                value={searchQuery}\n                                onChange={(e) => {\n                                    setSearchQuery(e.target.value);\n                                    setFieldValue(\"productQuery\", e.target.value); \n                                }}\n                            />\n                            <ErrorMessage name=\"productQuery\" component=\"div\" className={css.error} />\n                        </div>\n\n                        {/* Afișare rezultate dinamic */}\n                        {products && products.length > 0 && searchQuery && (\n                            <div className={css.results}>\n                                <ul>\n                                    {products.map(product => (\n                                        <li\n                                            key={product._id}\n                                            onClick={() => handleSelectProduct(product)}\n                                            className={selectedProduct?._id === product._id ? css.selected : ''}\n                                        >\n                                            {product.title}\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        )}\n\n                        {/* Formular pentru adăugarea produsului selectat */}\n                        <div>\n                            <Field\n                                type=\"number\"\n                                name=\"productWeight\"\n                                placeholder=\"Grams\"\n                                className={css.inputField}\n                            />\n                            <ErrorMessage name=\"productWeight\" component=\"div\" className={css.error} />\n                        </div>\n\n                        <div className={css.FieldGroup}>\n                            <button type=\"submit\" disabled={isSubmitting || !selectedProduct}>\n                                <img src={add_btn} alt=\"Add product\" />\n                            </button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\nexport default DiaryAddProductForm;\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\nimport css from './DiaryProductsListItem.module.css';\n\n\nconst DiaryProductsListItem = ({ product, onDelete }) => {\n    const { productId, product_weight, product_Calories } = product;\n    return (\n        <div className={css.productItem}>\n            <h4>{productId.title}</h4>\n            <p> {product_weight}g</p>\n            <p> {product_Calories} kcal</p>\n            <button type=\"button\" onClick={onDelete} className={css.btnDelete}>\n                X\n            </button>\n        </div>\n    );\n};\nexport default DiaryProductsListItem;","import React from \"react\";\nimport css from './DiaryProductsList.module.css'\nimport DiaryProductsListItem from \"../DiaryProductsListItem/DiaryProductsListItem\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchRemoveProduct } from \"../../redux/diary/operations\";\n\nconst DiaryProductsList = ({consumedProducts, selectedDate }) => {\n    const dispatch = useDispatch();\n\n    const handleDeleteProduct = (productId) => {\n        const dateString = selectedDate.toISOString(); \n        dispatch(fetchRemoveProduct({ date: dateString, productId }));\n    };\n\n    return (\n        <div className={css.wrapperList}>\n            {consumedProducts.length === 0 ? (\n                <p>No products consumed for this date.</p>\n            ) : (\n                consumedProducts.map((product) => (\n                    <DiaryProductsListItem key={product._id} product={product}\n                        onDelete={() => handleDeleteProduct(product._id)} />\n                ))\n            )}\n        </div>\n    );\n};\nexport default DiaryProductsList;","\nexport const selectDiary = (state) => state.diary.consumedProducts;\nexport const selectIsLoading = (state) => state.diary.isLoading;\nexport const selectconsumedProductsError = (state) => state.diary.error;\nexport const selectConsumedProducts = (state) => state.diary.consumedProducts.consumedProducts || [];\n\n\n    ","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\nimport css from './DiaryDateСalendar.module.css'\n\nconst DiaryDateСalendar = ({selectedDate, handleDateChange}) => {\n    return (\n        <div className={css.datePicker}>\n            <input\n                type=\"date\"\n                value={selectedDate.toISOString().split('T')[0]}\n                onChange={handleDateChange}\n            />\n        </div>\n    )\n};\n\nexport default DiaryDateСalendar;","import React, { useEffect, useState } from \"react\";\nimport css from './DiaryPage.module.css';\nimport DiaryAddProductForm from \"../../components/DiaryAddProductForm​/DiaryAddProductForm​\";\nimport DiaryProductsList from \"../../components/DiaryProductsList/DiaryProductsList\";\n\nimport { fetchAllProducts } from \"../../redux/diary/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectconsumedProductsError, selectDiary, selectIsLoading } from \"../../redux/diary/selectors\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport DiaryDateСalendar from \"../../components/DiaryDateСalendar/DiaryDateСalendar\";\n\n\nconst DiaryPage = () => {\n    \n    const consumedProducts = useSelector(selectDiary);\n    console.log('consumed products:', consumedProducts);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectconsumedProductsError);\n    const dispatch = useDispatch();\n    const [selectedDate, setSelectedDate] = useState(new Date());\n  \n    useEffect(() => {\n        const dateString = selectedDate.toISOString().split('T')[0];\n    \n      \n        dispatch(fetchAllProducts({ date: dateString }));\n    }, [selectedDate, dispatch]);\n  \n    const handleDateChange = (event) => {\n        setSelectedDate(new Date(event.target.value));\n    };\n  \n    if (isLoading) {\n        return <Spinner />\n    }\n\n    if (error) {\n        return <p>Error: {error}</p>\n    }\n    return (\n        <div className={css.wrapper}>\n            <DiaryDateСalendar selectedDate={selectedDate} handleDateChange={handleDateChange} />\n            <DiaryAddProductForm />\n      \n            {consumedProducts &&\n                <DiaryProductsList consumedProducts={consumedProducts} selectedDate={selectedDate} />\n            }\n        </div>\n    )\n};\n\nexport default DiaryPage;"],"names":["selectorSearchProducts","state","search","products","dispatch","useDispatch","useSelector","_useState3","useState","_useState4","_slicedToArray","searchQuery","setSearchQuery","_useState5","_useState6","selectedProduct","setSelectedProduct","debouncedSearchQuery","value","delay","_useState","_useState2","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","fetchSearchProducts","query","handleAddProduct","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","values","_ref","resetForm","dateString","_context","prev","next","productWeight","fetchDiaryConsumed","productId","_id","product_weight","Date","toISOString","split","fetchAllProducts","date","stop","_x","_x2","apply","arguments","_jsx","children","Formik","initialValues","productQuery","validationSchema","Yup","required","typeError","positive","onSubmit","_ref3","isSubmitting","setFieldValue","_jsxs","Form","className","css","Field","type","name","placeholder","onChange","e","target","ErrorMessage","component","length","map","product","onClick","title","handleSelectProduct","disabled","src","alt","onDelete","product_Calories","consumedProducts","selectedDate","DiaryProductsListItem","fetchRemoveProduct","handleDeleteProduct","selectDiary","diary","selectIsLoading","isLoading","selectconsumedProductsError","error","handleDateChange","console","log","setSelectedDate","Spinner","DiaryDateСalendar","event","DiaryAddProductForm","DiaryProductsList"],"sourceRoot":""}